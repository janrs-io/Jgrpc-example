// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package server

import (
	"userservice/config"
	"userservice/service/v1/client"
	"userservice/service/v1/server"
)

// Injectors from wire.go:

func InitServer(cfg string) (*Server, error) {
	configConfig := config.NewConfig(cfg)
	db := NewDB(configConfig)
	client := NewRedis(configConfig)
	authServiceClient, err := clientV1.NewAuthClient(configConfig)
	if err != nil {
		return nil, err
	}
	repository := serverV1.NewRepository(db, client, authServiceClient)
	group := NewRunGroup()
	logger := NewLogger()
	server := NewHttpServer(configConfig)
	userServiceClient, err := clientV1.NewUserClient(configConfig)
	if err != nil {
		return nil, err
	}
	userServiceServer := serverV1.NewServer(repository, logger, userServiceClient, authServiceClient)
	grpcServer := NewGrpcServer(logger, userServiceServer)
	serverServer := NewServer(repository, configConfig, group, logger, server, grpcServer, db)
	return serverServer, nil
}
